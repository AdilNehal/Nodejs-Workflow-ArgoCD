name: ci

env:
  CONFIG_REPO_NAME: Nodejs-Workflow-ArgoCD

on:
  push:
    branches:
      - 'main'

jobs:

  # sonarqube-analysis:
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: SonarQube Scan
  #       uses: sonarsource/sonarqube-scan-action@v2
  #       with:
  #         projectBaseDir: .
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  docker-build-and-scan:
    runs-on: ubuntu-24.04
    needs: sonarqube-analysis
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: adil22/node-app:${{ github.sha }}
          push: false
          load: true  # Required for Trivy to scan local image

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'adil22/node-app:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push image after successful scan
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: adil22/node-app:${{ github.sha }}
          push: true

  promote-to-dev-environment:
    runs-on: ubuntu-latest
    needs: docker-build-and-scan
    steps:
      - run: |
          echo "Promoting into dev environment!"
          git config --global user.email ci-bot@argocd.com && git config --global user.name ci-bot
          echo "Cloning config repo $CONFIG_REPO_NAME"
          git clone https://oauth2:${{ secrets.GH_PAT }}@github.com/${{ github.repository_owner }}/$CONFIG_REPO_NAME.git
          cd $CONFIG_REPO_NAME
          git checkout main
          sed -i "s,tag:.*,tag:\ ${{ github.sha }}," helm-charts-deploy/node-app/values.yaml
          git add . && git commit -m "update image tag"
          git push